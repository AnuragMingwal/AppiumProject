<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-30T23:42:30 IST" name="Android Suite" finished-at="2025-08-30T23:43:08 IST" duration-ms="37753">
    <groups>
    </groups>
    <test started-at="2025-08-30T23:42:30 IST" name="Login Test on Andorid " finished-at="2025-08-30T23:43:08 IST" duration-ms="37753">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String)[pri:0, instance:com.qa.tests.LoginTests@1bd4fdd]" started-at="2025-08-30T23:42:30 IST" name="beforeTest" finished-at="2025-08-30T23:42:38 IST" duration-ms="7003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@1bd4fdd]" started-at="2025-08-30T23:42:38 IST" name="beforeClass" finished-at="2025-08-30T23:42:38 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@1bd4fdd]" started-at="2025-08-30T23:42:38 IST" name="beforeMethod" finished-at="2025-08-30T23:42:38 IST" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invaliduserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invaliduserName()[pri:0, instance:com.qa.tests.LoginTests@1bd4fdd]" started-at="2025-08-30T23:42:38 IST" name="invaliduserName" finished-at="2025-08-30T23:42:44 IST" duration-ms="5551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invaliduserName -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@1bd4fdd]" started-at="2025-08-30T23:42:44 IST" name="beforeMethod" finished-at="2025-08-30T23:42:44 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.validuserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validuserName()[pri:0, instance:com.qa.tests.LoginTests@1bd4fdd]" started-at="2025-08-30T23:42:44 IST" name="validuserName" finished-at="2025-08-30T23:42:48 IST" duration-ms="4399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validuserName -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@1bd4fdd]" started-at="2025-08-30T23:42:48 IST" name="afterMethod" finished-at="2025-08-30T23:42:50 IST" duration-ms="2261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@1bd4fdd]" started-at="2025-08-30T23:43:08 IST" name="afterTest" finished-at="2025-08-30T23:43:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.tests.LoginTests -->
      <class name="com.qa.tests.ProductTests">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.ProductTests@42a48628]" started-at="2025-08-30T23:42:50 IST" name="beforeClass" finished-at="2025-08-30T23:42:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.ProductTests@42a48628]" started-at="2025-08-30T23:42:50 IST" name="beforeMethod" finished-at="2025-08-30T23:42:50 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.ProductTests.validProductsOnProductsDetailPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validProductsOnProductsDetailPage()[pri:0, instance:com.qa.tests.ProductTests@42a48628]" started-at="2025-08-30T23:42:50 IST" name="validProductsOnProductsDetailPage" finished-at="2025-08-30T23:43:01 IST" duration-ms="10343" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
SLB Price does not match expected [null] but found [carry.allTheThings() with the sleek, streamlined Sly Pack that melds uncompromising style with unequaled laptop and tablet protection.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
SLB Price does not match expected [null] but found [carry.allTheThings() with the sleek, streamlined Sly Pack that melds uncompromising style with unequaled laptop and tablet protection.]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at com.qa.tests.ProductTests.validProductsOnProductsDetailPage(ProductTests.java:131)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validProductsOnProductsDetailPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.ProductTests@42a48628]" started-at="2025-08-30T23:43:01 IST" name="beforeMethod" finished-at="2025-08-30T23:43:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.ProductTests.validateProductOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateProductOnProductsPage()[pri:0, instance:com.qa.tests.ProductTests@42a48628]" started-at="2025-08-30T23:43:01 IST" name="validateProductOnProductsPage" finished-at="2025-08-30T23:43:08 IST" duration-ms="7103" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateProductOnProductsPage -->
      </class> <!-- com.qa.tests.ProductTests -->
    </test> <!-- Login Test on Andorid  -->
  </suite> <!-- Android Suite -->
</testng-results>
